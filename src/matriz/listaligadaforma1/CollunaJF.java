/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matriz.listaligadaforma1;


import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import matriz.util.NodoDoble;


/**
 *
 * @author Liceo_2
 */
public class CollunaJF extends javax.swing.JFrame {
    
    
    
    private int tiemoT;
    public int[] exponentes = new int[3];
    public MatrizEnListaLigadaForma1 coeficientes;
    public int conFila;

    // getter
    public int getTiemoT() {
        return tiemoT;
    }

    public int getConFila() {
        return conFila;
    }

    public  void setConFila(int conFila) {
        this.conFila = conFila;
    }

    public int[] getExponentes() {
        return exponentes;
    }

    public MatrizEnListaLigadaForma1 getCoeficientes() {
        return coeficientes;
    }

   

    

   

    
    //setter
    public void setExponentes(int[] exponentes) {
        this.exponentes = exponentes;
    }

    public void setCoeficientes(MatrizEnListaLigadaForma1 coeficientes) {
        this.coeficientes = coeficientes;
    }





    

    /**
     * Creates new form CollunaJF
     */
    public CollunaJF() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        expA = new javax.swing.JTextField();
        coeA = new javax.swing.JTextField();
        expB = new javax.swing.JTextField();
        expC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        coeB = new javax.swing.JTextField();
        coeC = new javax.swing.JTextField();
        nfilas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        botonAdd = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaResultado = new javax.swing.JTextArea();
        gruardarPoli = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        modificarP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("practica");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Calculador \"d\"");

        expA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expAActionPerformed(evt);
            }
        });

        coeA.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("A*X^");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("+ B*X^");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("+ C*X^");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("NÂ° de polinomios:");

        coeB.setEditable(false);

        coeC.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Ingrese los valores de los coeficientes :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("A:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("B:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("C:");

        botonAdd.setText("Agregar");
        botonAdd.setEnabled(false);
        botonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAddActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Calculr d");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ver Matriz");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ver Polinomio");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        AreaResultado.setEditable(false);
        AreaResultado.setColumns(20);
        AreaResultado.setRows(5);
        jScrollPane1.setViewportView(AreaResultado);

        gruardarPoli.setBackground(new java.awt.Color(0, 0, 0));
        gruardarPoli.setForeground(new java.awt.Color(255, 255, 255));
        gruardarPoli.setText("Guardar Polinomio");
        gruardarPoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gruardarPoliActionPerformed(evt);
            }
        });

        jLabel10.setText("Resultado:");

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Crear Matriz");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        modificarP.setBackground(new java.awt.Color(0, 0, 0));
        modificarP.setForeground(new java.awt.Color(255, 255, 255));
        modificarP.setText("Modificar un P");
        modificarP.setEnabled(false);
        modificarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(gruardarPoli))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(expA, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(expB, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(expC, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coeA, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(coeB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9))
                                    .addComponent(botonAdd))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coeC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(nfilas, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(modificarP))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(expA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(expB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(expC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gruardarPoli)
                        .addGap(15, 15, 15)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nfilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(modificarP))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(coeA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coeB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coeC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonAdd)
                        .addGap(29, 29, 29)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton3))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        expA.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void expAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expAActionPerformed

    private void botonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAddActionPerformed
        int a,b,c;
        setConFila(conFila-1);
        int totalFilas = (Integer)coeficientes.getNodoCabezaMatriz().getT().getF();
        
        int fila = (totalFilas-getConFila());
        //JOptionPane.showMessageDialog(null,"valor "+col+" "+conFila+ " "+valor);
        
        try{
            a = Integer.parseInt(coeA.getText());
              if(a!=0){
                coeficientes.setCelda(fila,1,a);
             }
          
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"el valor A ingresados es incorrecto (Se tomara como un 0) .");
        }
        try{
            b = Integer.parseInt(coeB.getText());
            if(b!=0){
               coeficientes.setCelda(fila,2,b);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"El valor B ingresados es incorrecto (Se tomara como un 0).");
        }
        try{
            c = Integer.parseInt(coeC.getText());
            if(c!=0){
                coeficientes.setCelda(fila,3,c);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"El valor C ingresados es incorrecto (Se tomara como un 0).");
        }
        coeA.setText("");
        coeB.setText("");
        coeC.setText("");
        
        if(conFila==0){
            //setConFila(1);
            coeA.setEditable(false);
            coeB.setEditable(false);
            coeC.setEditable(false);
            botonAdd.setEnabled(false);
    
        }
    }//GEN-LAST:event_botonAddActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //inicializamos la variable de salida con el texte algo salio mal, que es lo que s emostrarar si no se realiza el calculo.
        String salida = "Algo salio mal";
        //validamos que exista la matriz y el vector de exponentes 
        if(getCoeficientes() != null && getExponentes()!= null){
            try{
                //protegemos con execciones la toma del valor t
               int temp = Integer.parseInt(JOptionPane.showInputDialog(null,"Porfavor ingrece el valor del tiempo (t) a evaluar: "));
               if(temp>=0){
                   //llamamos el metodo calcularD que lo creamos en la clase matriz forma 1 por practicidad.
                  salida = coeficientes.calcularD(temp, exponentes);
               }else{
                 JOptionPane.showMessageDialog(null,"El tiempo no puede ser negativo");
               }
               }catch(HeadlessException | NumberFormatException e){
             JOptionPane.showMessageDialog(null,"ingreso un valor t incorrecto");
            }
            
                      
            
           
            
            
            
            /**String salida = "";
            double dParcial=0;
            int[] expoTemp = getExponentes();
            int temp=1;
            
                NodoDoble cabeza,ultimo;
                NodoDoble recorrido = coeficientes.getLigaNodoCabeza(coeficientes.getNodoCabezaMatriz());
                cabeza = recorrido;
                ultimo = recorrido;
                
                for(int i = 0; i<numeroFilas;i++){
                  recorrido = recorrido.getLigaF();
                  ultimo = recorrido;
                   
                   for(int j =0; j<3; j++){
                       recorrido = recorrido;
                       if(recorrido != null && recorrido != ultimo){
                          double x = (Double) recorrido.getT().getV();
                          dParcial += x * (temp^expoTemp[j]);
                          //salida += toString((recorrido.getT().getV())*(temp^expoTemp[0]));
                         }
                                                         
                   }
                  
                   
                  salida += "d-"+(i+1)+": "+dParcial+"\n";
                 
                }**/
          
          AreaResultado.setText(salida);
        
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        AreaResultado.setText(coeficientes.toString());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(exponentes!=null){
        AreaResultado.setText("P = A*(t)^"+exponentes[0]+"+B*(t)^"+exponentes[1]+"+C*(t)^"+exponentes[2]+"");
      }else{
       JOptionPane.showMessageDialog(null,"aun no ha agregado un polinomio");
      }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void gruardarPoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gruardarPoliActionPerformed
        
         
         
         int [] expTemp= new int[3];      
         //while (bienIngresado) {             
          
        
        
         
         try {
            
            expTemp[0] =  Integer.parseInt(expA.getText());
            expTemp[1] = Integer.parseInt(expB.getText());
            expTemp[2] = Integer.parseInt(expC.getText());
        
            //bienIngresado = false;
         }catch(Exception e){
             JOptionPane.showMessageDialog(null,"Ingreso un valor incorrecto");
         }    
         
         exponentes = expTemp;
          
         expA.setText("");
         expB.setText("");
         expC.setText("");
            
          //  }
         
        
          
       
    
    }//GEN-LAST:event_gruardarPoliActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      if(!("".equals(nfilas.getText()))){
   
          int fila;
          try{
              fila = Integer.parseInt(nfilas.getText());
              setConFila(fila);
              coeficientes = new MatrizEnListaLigadaForma1(fila, 3);
               coeA.setEditable(true);
               coeB.setEditable(true);
               coeC.setEditable(true);
               botonAdd.setEnabled(true);
               nfilas.setText("");
               modificarP.setEnabled(true);
          }catch(Exception e){
              JOptionPane.showMessageDialog(null,"Ingreso un valor incorrecto");
          }
          
          
          
        }else{
           JOptionPane.showMessageDialog(null,"Por favor ingrese el NÂ° de polinomios");
           
      }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void modificarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarPActionPerformed
        NodoDoble ultimo = getCoeficientes().getLigaNodoCabeza(getCoeficientes().getNodoCabezaMatriz());
        NodoDoble recorrido = ultimo;
        double nuevoValor;
        int contadorNodos=0;
        
        try {
             int polAmodificar = Integer.parseInt(nfilas.getText());
             polAmodificar = polAmodificar -1;
              for(int i= 0; i<polAmodificar;i++){
                  ultimo = getCoeficientes().getLigaNodoCabeza(ultimo);
              }
             recorrido = ultimo;
             recorrido = recorrido.getLigaF();
             while (recorrido  != ultimo) {
                 contadorNodos++;
                 recorrido = recorrido.getLigaF();                           
             }
             recorrido=ultimo;
             if(contadorNodos == 3){
             for(int j = 0; j<3;j++){
               recorrido = recorrido.getLigaF();
                 if(recorrido != null && recorrido != ultimo){
                   int colCorrespon = recorrido.getT().getC();
                     switch(colCorrespon){
                         case 1 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de A"));
                                  recorrido.getT().setV(nuevoValor);
                                  break;
                         case 2 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de B"));
                                  recorrido.getT().setV(nuevoValor);
                                  break;
                         case 3 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de C"));
                                  recorrido.getT().setV(nuevoValor);             
                                  break;
                         default:break;
                     }
                   
                 }
             }
            }else if(contadorNodos==2){
                int colum1=0;
                int colum2=0;
                              
                 for(int i = 0; i <contadorNodos; i++){
                    recorrido = recorrido.getLigaF();
                    if(i==0){
                    colum1 = recorrido.getT().getC();
                    }
                    if(i==1){
                    colum2 = recorrido.getT().getC();
                    }
                 }
                 recorrido = ultimo;
                 recorrido = recorrido.getLigaF();
                 int caso = colum1+colum2;
                 switch(caso){
                         case 3 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de C"));
                                  coeficientes.setCelda(recorrido.getT().getF(),3, nuevoValor);
                                  break;
                         case 4 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de B"));
                                  coeficientes.setCelda(recorrido.getT().getF(),2, nuevoValor);
                                  break;
                         case 5 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de A"));
                                  coeficientes.setCelda(recorrido.getT().getF(),1, nuevoValor);             
                                  break;
                         default:break;
                     }
                 
              
            }else if(contadorNodos == 1){
              recorrido = recorrido.getLigaF();
              int colum = recorrido.getT().getC();
              switch(colum){
                         case 1 : double nuevoValor1 =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de B"));
                                  coeficientes.setCelda(recorrido.getT().getF(),2, nuevoValor1);
                                 
                             
                                  double nuevoValor2 =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de C"));
                                  coeficientes.setCelda(recorrido.getT().getF(),3, nuevoValor2);
                                  break;
                         case 2 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de A"));
                                  coeficientes.setCelda(recorrido.getT().getF(),1, nuevoValor); 
                                 
                                  nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de C"));
                                  coeficientes.setCelda(recorrido.getT().getF(),3, nuevoValor);
                                  break;
                         case 3 : nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de A"));
                                  coeficientes.setCelda(recorrido.getT().getF(),1, nuevoValor);  
                                
                                  nuevoValor =Integer.parseInt(JOptionPane.showInputDialog(null," Ingrese el nuevo valor de B"));
                                  coeficientes.setCelda(recorrido.getT().getF(),2, nuevoValor);
                                  break;
                         default:break;
                     }
              
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Valor ingresado no valido");
        }
       nfilas.setText("");
        
        
        
    }//GEN-LAST:event_modificarPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CollunaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CollunaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CollunaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CollunaJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CollunaJF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaResultado;
    private javax.swing.JButton botonAdd;
    private javax.swing.JTextField coeA;
    private javax.swing.JTextField coeB;
    private javax.swing.JTextField coeC;
    private javax.swing.JTextField expA;
    private javax.swing.JTextField expB;
    private javax.swing.JTextField expC;
    private javax.swing.JButton gruardarPoli;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton modificarP;
    private javax.swing.JTextField nfilas;
    // End of variables declaration//GEN-END:variables
}
